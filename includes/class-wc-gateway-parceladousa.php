<?php

if ( ! defined( 'ABSPATH' ) ) {
    exit;
}
/**
 * WC_Gateway_Parceladousa class.
 *
 * @extends WC_Payment_Gateway
 */
class WC_Gateway_Parceladousa extends WC_Payment_Gateway
{
    /**
     * Constructor for the gateway.
     */
    public function __construct()
    {
        // Setup general properties.
        $this->setup_properties();

        // Load the form fields.
        $this->init_form_fields();
        
        // Load the settings.
        $this->init_settings();

        // Get settings.
        $this->title = $this->get_option('title');
        $this->public_key = $this->get_option('public_key');
        $this->merchant_code = $this->get_option('merchant_code');
        $this->description        = '<img style="max-height: 100%; float: left;" src="'.plugins_url('../assets/parcelado-pay-checkout.png', __FILE__ ).'" />';
        $this->enviroment = $this->get_option('enviroment');

        // Set the API.
        $this->api = new WC_Parceladousa_Api($this, $this->enviroment);

        // Actions.
        add_action( 'woocommerce_api_wc_gateway_parceladousa', array( $this, 'callback_parceladousa_handler' ) );
        add_action( 'valid_parceladousa_api_callback', array( $this, 'update_order_status' ) );
        add_action( 'woocommerce_update_options_payment_gateways_' . $this->id, array( $this, 'process_admin_options' ) );
    }

    /**
     * Setup general properties for the gateway.
     */
    protected function setup_properties()
    {
        $this->id = 'parceladousa';
        $this->method_title = __('ParceladoUSA', 'woocommerce-gateway-parceladousa');
        $this->public_key   = __('Your public payment key at ParceladoUSA', 'woocommerce-gateway-parceladousa');
        $this->merchant_code    = __('Your Store Code in ParceladoUSA Payment', 'woocommerce-gateway-parceladousa');
        $this->enviroment    = __('Your Enviroment ParceladoUSA Payment', 'woocommerce-gateway-parceladousa');
        $this->method_description = __('Use ParceladoUSA Payment in the store', 'woocommerce-gateway-parceladousa');
        $this->has_fields = false;
    }

    /**
     * Initialise Gateway Settings Form Fields.
     */
    public function init_form_fields()
    {
        $this->form_fields = array(
            'enabled' => array(
                'title' => __('Enable/Disable', 'woocommerce-gateway-parceladousa'),
                'label' => __('Enable or Disable Payment with ParceladoUSA ', 'woocommerce-gateway-parceladousa'),
                'type' => 'checkbox',
                'description' => '',
                'default' => 'no',
            ),
            'title' => array(
                'title' => __('Title', 'woocommerce-gateway-parceladousa'),
                'type' => 'text',
                'description' => __('ParceladoUSA Payment method description that the customer will see on your checkout.', 'woocommerce-gateway-parceladousa'),
                'default' => __('ParceladoUSA Payment', 'woocommerce-gateway-parceladousa'),
                'desc_tip' => true,
            ),
            'public_key' => array(
                'title' => __('Public Key', 'woocommerce-gateway-parceladousa'),
                'type' => 'text',
                'description' => __('Insert your Publick Key generated by ParceladoUSA.', 'woocommerce-gateway-parceladousa'),
                'required' => true,
                'desc_tip' => true,
            ),
            'merchant_code' => array(
                'title' => __('Store Code', 'woocommerce-gateway-parceladousa'),
                'type' => 'text',
                'required' => true,
                'desc_tip' => true,
                'maxlength' => 4,
                'description' => __('Insert your Store Code generated by ParceladoUSA.', 'woocommerce-gateway-parceladousa'),
            ),
            'enviroment' => array(
                'title' => __('Enviroment', 'woocommerce-gateway-parceladousa'),
                'type' => 'select',
                'description' => __('Insert your environment work.', 'woocommerce-gateway-parceladousa'),
                'required' => true,
                'desc_tip' => true,
                'options'     => array(
                    'sandbox' => __('Sandbox', 'woocommerce-gateway-parceladousa'),
                    'production' => __('Production', 'woocommerce-gateway-parceladousa')
                )
            )
        );
    }


    /**
     * Process the payment and return the result.
     *
     * @param int $order_id Order ID.
     * @return array
     */
    public function process_payment($order_id)
    {
        $order = wc_get_order($order_id);

        if ($order->get_total() > 0) {
            /** @var WC_Order $order */

            $requestOrder = $this->api->request_payment_order($order);
            if($requestOrder->fail()){
                wc_add_notice( __('Payment error: There is something wrong with your payment', 'woocommerce-gateway-parceladousa'), 'error' );

                return array(
                    'result'   => 'fail',
                    'redirect' => '',
                );
            }

            $redirect_order_id = $this->api->get_payment_order_data()->orderId;
            $order->add_meta_data('parceladousa_payment_id', $redirect_order_id, true);

            // Mark as pending (we're awaiting the ParceladoUSA)
            $order->update_status('pending', __( 'Awaiting ParceladoUSA payment', 'woocommerce-gateway-parceladousa' ));

            // Return thankyou redirect.
            return array(
                'result'   => 'success',
                'redirect' => $this->api->get_payment_order_data()->url,
            );

        } else {

            wc_add_notice( __('Payment error: There is something wrong with your payment', 'woocommerce-gateway-parceladousa'), 'error' );

            return array(
                'result'   => 'fail',
                'redirect' => '',
            );
        }
    }

    public function callback_parceladousa_handler()
    {
        @ob_clean(); // phpcs:ignore Generic.PHP.NoSilencedErrors.Discouraged

        $post   = json_decode(file_get_contents("php://input"), true);
        $get    = filter_input_array(INPUT_GET, FILTER_SANITIZE_STRIPPED);

        if(!empty($get)){
            $callback_data = (object) $get;
            $callback_data->method = 'get';
        }else if(!empty($post)){
            $callback_data = (object) $post;
            $callback_data->method = 'post';
        }else{
            $callback_data = null;
        }

        if (!empty($callback_data)) {
            header( 'HTTP/1.1 200 OK' );
            do_action( 'valid_parceladousa_api_callback', $callback_data );
            exit();
        }
    }
    public function process_webhook_parceladousa_refund($order)
    {
        wc_create_refund(
            [
                'order_id' => $order->get_id(),
                'amount'   => $order->get_total(),
                'reason'   => '',
            ]
        );
    }
    public function update_order_status($callback_data)
    {
        /** @var  WC_Order $order */
        $orders = wc_get_orders(
            array(
            'meta_key'     => 'parceladousa_payment_id',
            'meta_value'     => $callback_data->orderId,
            )
        );

        $order = $orders[0];

        if($callback_data->method === 'get') {
            $consultOrder = $this->api->consult_payment_order($callback_data->orderId);

            if ($consultOrder->fail()) {
                wc_add_notice(__('Payment error: There is something wrong with your payment', 'woocommerce-gateway-parceladousa'), 'error');

                wp_safe_redirect(get_home_url());
            }
            $status = $consultOrder->get_payment_order_status();
        }else{
            $status = $callback_data->status;
        }

        switch ($status){
            case 'pending':
                $order->update_status('on-hold', __('ParceladoUSA: Payment pending.', 'woocommerce-gateway-parceladousa'));
                wp_safe_redirect($this->get_return_url($order));
                break;
            case 'analysis':
                $order->update_status('on-hold', __('ParceladoUSA: Payment in analysis.', 'woocommerce-gateway-parceladousa'));
                wp_safe_redirect($this->get_return_url($order));
                break;
            case 'approved':
                // If cleared
                $order->payment_complete();

                // Remove cart.
                WC()->cart->empty_cart();

                wp_safe_redirect($this->get_return_url($order));
                break;
            case 'canceled':
                $this->process_webhook_parceladousa_refund($order);
                break;
            case 'aborted':
                $order->update_status('cancelled', __('ParceladoUSA: Payment canceled.', 'woocommerce-gateway-parceladousa'));
                wp_safe_redirect(wc_get_checkout_url());
                break;
            case 'open':
                $order->update_status('pending', __( 'Awaiting ParceladoUSA payment', 'woocommerce-gateway-parceladousa' ));
                wp_safe_redirect(wc_get_checkout_url());
                break;
            default:
                break;
        }

    }

    public function is_available() {
        // Test if is valid for use.
        $available = $this->get_option('enabled') === 'yes' && $this->public_key !== '' && $this->merchant_code !== '';
        $currencys = array('BRL', 'USD');
        $locales = array('pt_BR', 'en_US');
        if(!in_array(get_woocommerce_currency(), $currencys)){
            $available = false;
        };
        if(!in_array(get_locale(), $locales)){
            $available = false;
        };
        return $available;
    }

}